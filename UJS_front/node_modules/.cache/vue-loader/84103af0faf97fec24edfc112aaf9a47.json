{"remainingRequest":"C:\\Users\\15985\\IdeaProjects\\Vue\\src\\vuepro\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\15985\\IdeaProjects\\Vue\\src\\vuepro\\src\\components\\homecomponents\\MyGame.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\15985\\IdeaProjects\\Vue\\src\\vuepro\\src\\components\\homecomponents\\MyGame.vue","mtime":1558435958339},{"path":"C:\\Users\\15985\\IdeaProjects\\Vue\\src\\vuepro\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\15985\\IdeaProjects\\Vue\\src\\vuepro\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\15985\\IdeaProjects\\Vue\\src\\vuepro\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\15985\\IdeaProjects\\Vue\\src\\vuepro\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n\n\nexport default {\n    name: \"MyGame\",\n    computed: {\n        currentUser() {\n            return this.$store.state.user;\n        },\n    },\n    data() {\n        return {}\n    },\n    mounted() {\n        var canvas = document.getElementById(\"canvas\");\n        var c = canvas.getContext(\"2d\");\n        var myGameVue = this;\n\n        function f() {\n            function Bird(x, y, image) {\n                this.x = x,\n                    this.y = y,\n                    this.width = image.width / 2,\n                    this.height = image.height,\n                    this.image = image;\n                this.draw = function (context, state) {\n                    if (state === \"up\")\n                        context.drawImage(image, 0, 0, this.width, this.height, this.x, this.y, this.width, this.height);\n                    else {\n                        context.drawImage(image, this.width, 0, this.width, this.height, this.x, this.y, this.width, this.height);\n                    }\n                }\n            }\n\n            function Obstacle(x, y, h, image) {\n                this.x = x,\n                    this.y = y,\n                    this.width = image.width / 2,\n                    this.height = h,\n                    this.draw = function (context, state) {\n                        if (state === \"up\") {\n                            context.drawImage(image, 0, 0, this.width, this.height, this.x, this.y, this.width, this.height);\n                        } else {\n                            context.drawImage(image, this.width, image.height - this.height, this.width, this.height, this.x, this.y, this.width, this.height);\n                        }\n                    }\n            }\n\n            function FlappyBird() {\n            }\n\n            FlappyBird.prototype = {\n                bird: null, // 小鸟\n                bg: null, // 背景图\n                obs: null, // 障碍物\n                obsList: [],\n\n                mapWidth: 290, // 画布宽度\n                mapHeight: 453, // 画布高度\n                startX: 90, // 起始位置\n                startY: 225,\n                obsDistance: 100, // 上下障碍物距离\n                obsSpeed: 2, // 障碍物移动速度\n                obsInterval: 2000, // 制造障碍物间隔ms\n                upSpeed: 8, // 上升速度\n                downSpeed: 3, // 下降速度\n                line: 56, // 地面高度\n                score: 0, // 得分\n                touch: false, // 是否触摸\n                gameOver: false,\n                CreateMap: function () {\n                    //背景\n                    this.bg = new Image();\n                    this.bg.src = require('../../assets/img/bg.png');\n                    var startBg = new Image();\n                    startBg.src = require('../../assets/img/start.jpg');\n                    // 由于Image异步加载, 在加载完成时在绘制图像\n                    startBg.onload = function () {\n                        c.drawImage(startBg, 0, 0);\n                    };\n\n                    //小鸟\n                    var image = new Image();\n                    image.src = require('../../assets/img/bird.png');\n                    image.onload = function () {\n                        this.bird = new Bird(this.startX, this.startY, image);\n                        //this.bird.draw(c, \"down\");\n                    }.bind(this);\n\n                    //障碍物\n                    this.obs = new Image();\n                    this.obs.src = require('../../assets/img/obs.png');\n                    this.obs.onload = function () {\n                        var h = 100; // 默认第一障碍物上管道高度为100\n                        var h2 = this.mapHeight - h - this.obsDistance;\n                        var obs1 = new Obstacle(this.mapWidth, 0, h, this.obs);\n                        var obs2 = new Obstacle(this.mapWidth, this.mapHeight - h2, h2 - this.line, this.obs);\n                        this.obsList.push(obs1);\n                        this.obsList.push(obs2);\n                    }.bind(this);\n                },\n                CreateObs: function () {\n                    // 随机产生障碍物上管道高度\n                    var h = Math.floor(Math.random() * (this.mapHeight - this.obsDistance - this.line));\n                    var h2 = this.mapHeight - h - this.obsDistance;\n                    var obs1 = new Obstacle(this.mapWidth, 0, h, this.obs);\n                    var obs2 = new Obstacle(this.mapWidth, this.mapHeight - h2, h2 - this.line, this.obs);\n                    this.obsList.push(obs1);\n                    this.obsList.push(obs2);\n\n                    // 移除越界障碍物\n                    if (this.obsList[0].x < -this.obsList[0].width)\n                        this.obsList.splice(0, 2);\n                },\n                DrawObs: function () { //绘制障碍物\n                    c.fillStyle = \"#00ff00\";\n                    for (var i = 0; i < this.obsList.length; i++) {\n                        this.obsList[i].x -= this.obsSpeed;\n                        if (i % 2)\n                            this.obsList[i].draw(c, \"up\");\n                        else\n                            this.obsList[i].draw(c, \"down\");\n                    }\n                },\n                CountScore: function () { // 计分\n                    if (this.score == 0 && this.obsList[0].x + this.obsList[0].width < this.startX) {\n                        this.score = 1;\n                        return true;\n                    }\n                    return false;\n                },\n                ShowScore: function () { // 显示分数\n                    c.strokeStyle = \"#000\";\n                    c.lineWidth = 1;\n                    c.fillStyle = \"#fff\"\n                    c.fillText(this.score, 10, 50);\n                    c.strokeText(this.score, 10, 50);\n                },\n                CanMove: function () { // 碰撞检测\n                    if (this.bird.y < 0 || this.bird.y > this.mapHeight - this.bird.height - this.line) {\n                        this.gameOver = true;\n                    } else {\n                        var boundary = [{\n                            x: this.bird.x,\n                            y: this.bird.y\n                        }, {\n                            x: this.bird.x + this.bird.width,\n                            y: this.bird.y\n                        }, {\n                            x: this.bird.x,\n                            y: this.bird.y + this.bird.height\n                        }, {\n                            x: this.bird.x + this.bird.width,\n                            y: this.bird.y + this.bird.height\n                        }];\n                        for (var i = 0; i < this.obsList.length; i++) {\n                            for (var j = 0; j < 4; j++)\n                                if (boundary[j].x >= this.obsList[i].x && boundary[j].x <= this.obsList[i].x + this.obsList[i].width && boundary[j].y >= this.obsList[i].y && boundary[j].y <= this.obsList[i].y + this.obsList[i].height) {\n                                    this.gameOver = true;\n                                    break;\n                                }\n                            if (this.gameOver)\n                                break;\n                        }\n                    }\n                },\n                CheckTouch: function () { // 检测触摸\n                    if (this.touch) {\n                        this.bird.y -= this.upSpeed;\n                        this.bird.draw(c, \"up\");\n                    } else {\n                        this.bird.y += this.downSpeed;\n                        this.bird.draw(c, \"down\");\n                    }\n                },\n                ClearScreen: function () { // 清屏\n                    c.drawImage(this.bg, 0, 0);\n                },\n                ShowOver: function () {\n                    var overImg = new Image();\n                    overImg.src = require('../../assets/img/over.png');\n                    overImg.onload = function () {\n                        c.drawImage(overImg, (this.mapWidth - overImg.width) / 2, (this.mapHeight - overImg.height) / 2 - 50);\n                        //发送axios请求，将游戏记录导入\n                        var scoreItem = {\n                            \"userName\": myGameVue.currentUser,\n                            \"score\": this.score,\n                            \"time\": parseInt(new Date().getTime()/1000),\n                        }\n                        myGameVue.axios.post(\"http://localhost:8080/scoreItem\",scoreItem)\n                        //重新加载画布\n                        canvas.onmousedown = function () {\n                            f()\n                        }\n                    }.bind(this);\n                    return;\n                }\n            };\n            var game = new FlappyBird();\n            var Speed = 20;\n            var IsPlay = false;\n\n            InitGame();\n\n            function InitGame() {\n\n                c.font = \"3em 微软雅黑\";\n                game.CreateMap();\n\n                canvas.onmousedown = function () {\n                    game.touch = true;\n                }\n                canvas.onmouseup = function () {\n                    game.touch = false;\n                };\n                canvas.onclick = function () {\n                    if (!IsPlay) {\n                        IsPlay = true;\n                        RunGame(Speed);\n                    }\n                }\n            }\n\n            function RunGame(speed) {\n                var updateTimer = setInterval(function () {\n                    // 若小鸟通过第一个障碍物启动记分器\n                    if (game.CountScore()) {\n                        var scoreTimer = setInterval(function () {\n                            if (game.gameOver) {\n                                clearInterval(scoreTimer);\n                                return;\n                            }\n                            game.score++;\n                        }, game.obsInterval);\n                    }\n\n                    game.CanMove();\n                    if (game.gameOver) {\n                        game.ShowOver();\n                        clearInterval(updateTimer);\n                        return;\n                    }\n                    game.ClearScreen();\n                    game.DrawObs();\n                    game.CheckTouch();\n                    game.ShowScore();\n                }, speed);\n                var obsTimer = setInterval(function () {\n                    if (game.gameOver) {\n                        clearInterval(obsTimer);\n                        return;\n                    }\n                    game.CreateObs();\n                }, game.obsInterval);\n            }\n        }\n\n        f();\n\n    }\n}\n",{"version":3,"sources":["MyGame.vue"],"names":[],"mappings":";;;;;;;;;;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA","file":"MyGame.vue","sourceRoot":"src/components/homecomponents","sourcesContent":["<template>\r\n    <div v-show=\"currentUser!='游客'\">\r\n        <div>\r\n            <canvas id=\"canvas\" width=\"294\" height=\"453\" style=\"border: 2px solid black\"></canvas>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\n    export default {\r\n        name: \"MyGame\",\r\n        computed: {\r\n            currentUser() {\r\n                return this.$store.state.user;\r\n            },\r\n        },\r\n        data() {\r\n            return {}\r\n        },\r\n        mounted() {\r\n            var canvas = document.getElementById(\"canvas\");\r\n            var c = canvas.getContext(\"2d\");\r\n            var myGameVue = this;\r\n\r\n            function f() {\r\n                function Bird(x, y, image) {\r\n                    this.x = x,\r\n                        this.y = y,\r\n                        this.width = image.width / 2,\r\n                        this.height = image.height,\r\n                        this.image = image;\r\n                    this.draw = function (context, state) {\r\n                        if (state === \"up\")\r\n                            context.drawImage(image, 0, 0, this.width, this.height, this.x, this.y, this.width, this.height);\r\n                        else {\r\n                            context.drawImage(image, this.width, 0, this.width, this.height, this.x, this.y, this.width, this.height);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                function Obstacle(x, y, h, image) {\r\n                    this.x = x,\r\n                        this.y = y,\r\n                        this.width = image.width / 2,\r\n                        this.height = h,\r\n                        this.draw = function (context, state) {\r\n                            if (state === \"up\") {\r\n                                context.drawImage(image, 0, 0, this.width, this.height, this.x, this.y, this.width, this.height);\r\n                            } else {\r\n                                context.drawImage(image, this.width, image.height - this.height, this.width, this.height, this.x, this.y, this.width, this.height);\r\n                            }\r\n                        }\r\n                }\r\n\r\n                function FlappyBird() {\r\n                }\r\n\r\n                FlappyBird.prototype = {\r\n                    bird: null, // 小鸟\r\n                    bg: null, // 背景图\r\n                    obs: null, // 障碍物\r\n                    obsList: [],\r\n\r\n                    mapWidth: 290, // 画布宽度\r\n                    mapHeight: 453, // 画布高度\r\n                    startX: 90, // 起始位置\r\n                    startY: 225,\r\n                    obsDistance: 100, // 上下障碍物距离\r\n                    obsSpeed: 2, // 障碍物移动速度\r\n                    obsInterval: 2000, // 制造障碍物间隔ms\r\n                    upSpeed: 8, // 上升速度\r\n                    downSpeed: 3, // 下降速度\r\n                    line: 56, // 地面高度\r\n                    score: 0, // 得分\r\n                    touch: false, // 是否触摸\r\n                    gameOver: false,\r\n                    CreateMap: function () {\r\n                        //背景\r\n                        this.bg = new Image();\r\n                        this.bg.src = require('../../assets/img/bg.png');\r\n                        var startBg = new Image();\r\n                        startBg.src = require('../../assets/img/start.jpg');\r\n                        // 由于Image异步加载, 在加载完成时在绘制图像\r\n                        startBg.onload = function () {\r\n                            c.drawImage(startBg, 0, 0);\r\n                        };\r\n\r\n                        //小鸟\r\n                        var image = new Image();\r\n                        image.src = require('../../assets/img/bird.png');\r\n                        image.onload = function () {\r\n                            this.bird = new Bird(this.startX, this.startY, image);\r\n                            //this.bird.draw(c, \"down\");\r\n                        }.bind(this);\r\n\r\n                        //障碍物\r\n                        this.obs = new Image();\r\n                        this.obs.src = require('../../assets/img/obs.png');\r\n                        this.obs.onload = function () {\r\n                            var h = 100; // 默认第一障碍物上管道高度为100\r\n                            var h2 = this.mapHeight - h - this.obsDistance;\r\n                            var obs1 = new Obstacle(this.mapWidth, 0, h, this.obs);\r\n                            var obs2 = new Obstacle(this.mapWidth, this.mapHeight - h2, h2 - this.line, this.obs);\r\n                            this.obsList.push(obs1);\r\n                            this.obsList.push(obs2);\r\n                        }.bind(this);\r\n                    },\r\n                    CreateObs: function () {\r\n                        // 随机产生障碍物上管道高度\r\n                        var h = Math.floor(Math.random() * (this.mapHeight - this.obsDistance - this.line));\r\n                        var h2 = this.mapHeight - h - this.obsDistance;\r\n                        var obs1 = new Obstacle(this.mapWidth, 0, h, this.obs);\r\n                        var obs2 = new Obstacle(this.mapWidth, this.mapHeight - h2, h2 - this.line, this.obs);\r\n                        this.obsList.push(obs1);\r\n                        this.obsList.push(obs2);\r\n\r\n                        // 移除越界障碍物\r\n                        if (this.obsList[0].x < -this.obsList[0].width)\r\n                            this.obsList.splice(0, 2);\r\n                    },\r\n                    DrawObs: function () { //绘制障碍物\r\n                        c.fillStyle = \"#00ff00\";\r\n                        for (var i = 0; i < this.obsList.length; i++) {\r\n                            this.obsList[i].x -= this.obsSpeed;\r\n                            if (i % 2)\r\n                                this.obsList[i].draw(c, \"up\");\r\n                            else\r\n                                this.obsList[i].draw(c, \"down\");\r\n                        }\r\n                    },\r\n                    CountScore: function () { // 计分\r\n                        if (this.score == 0 && this.obsList[0].x + this.obsList[0].width < this.startX) {\r\n                            this.score = 1;\r\n                            return true;\r\n                        }\r\n                        return false;\r\n                    },\r\n                    ShowScore: function () { // 显示分数\r\n                        c.strokeStyle = \"#000\";\r\n                        c.lineWidth = 1;\r\n                        c.fillStyle = \"#fff\"\r\n                        c.fillText(this.score, 10, 50);\r\n                        c.strokeText(this.score, 10, 50);\r\n                    },\r\n                    CanMove: function () { // 碰撞检测\r\n                        if (this.bird.y < 0 || this.bird.y > this.mapHeight - this.bird.height - this.line) {\r\n                            this.gameOver = true;\r\n                        } else {\r\n                            var boundary = [{\r\n                                x: this.bird.x,\r\n                                y: this.bird.y\r\n                            }, {\r\n                                x: this.bird.x + this.bird.width,\r\n                                y: this.bird.y\r\n                            }, {\r\n                                x: this.bird.x,\r\n                                y: this.bird.y + this.bird.height\r\n                            }, {\r\n                                x: this.bird.x + this.bird.width,\r\n                                y: this.bird.y + this.bird.height\r\n                            }];\r\n                            for (var i = 0; i < this.obsList.length; i++) {\r\n                                for (var j = 0; j < 4; j++)\r\n                                    if (boundary[j].x >= this.obsList[i].x && boundary[j].x <= this.obsList[i].x + this.obsList[i].width && boundary[j].y >= this.obsList[i].y && boundary[j].y <= this.obsList[i].y + this.obsList[i].height) {\r\n                                        this.gameOver = true;\r\n                                        break;\r\n                                    }\r\n                                if (this.gameOver)\r\n                                    break;\r\n                            }\r\n                        }\r\n                    },\r\n                    CheckTouch: function () { // 检测触摸\r\n                        if (this.touch) {\r\n                            this.bird.y -= this.upSpeed;\r\n                            this.bird.draw(c, \"up\");\r\n                        } else {\r\n                            this.bird.y += this.downSpeed;\r\n                            this.bird.draw(c, \"down\");\r\n                        }\r\n                    },\r\n                    ClearScreen: function () { // 清屏\r\n                        c.drawImage(this.bg, 0, 0);\r\n                    },\r\n                    ShowOver: function () {\r\n                        var overImg = new Image();\r\n                        overImg.src = require('../../assets/img/over.png');\r\n                        overImg.onload = function () {\r\n                            c.drawImage(overImg, (this.mapWidth - overImg.width) / 2, (this.mapHeight - overImg.height) / 2 - 50);\r\n                            //发送axios请求，将游戏记录导入\r\n                            var scoreItem = {\r\n                                \"userName\": myGameVue.currentUser,\r\n                                \"score\": this.score,\r\n                                \"time\": parseInt(new Date().getTime()/1000),\r\n                            }\r\n                            myGameVue.axios.post(\"http://localhost:8080/scoreItem\",scoreItem)\r\n                            //重新加载画布\r\n                            canvas.onmousedown = function () {\r\n                                f()\r\n                            }\r\n                        }.bind(this);\r\n                        return;\r\n                    }\r\n                };\r\n                var game = new FlappyBird();\r\n                var Speed = 20;\r\n                var IsPlay = false;\r\n\r\n                InitGame();\r\n\r\n                function InitGame() {\r\n\r\n                    c.font = \"3em 微软雅黑\";\r\n                    game.CreateMap();\r\n\r\n                    canvas.onmousedown = function () {\r\n                        game.touch = true;\r\n                    }\r\n                    canvas.onmouseup = function () {\r\n                        game.touch = false;\r\n                    };\r\n                    canvas.onclick = function () {\r\n                        if (!IsPlay) {\r\n                            IsPlay = true;\r\n                            RunGame(Speed);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                function RunGame(speed) {\r\n                    var updateTimer = setInterval(function () {\r\n                        // 若小鸟通过第一个障碍物启动记分器\r\n                        if (game.CountScore()) {\r\n                            var scoreTimer = setInterval(function () {\r\n                                if (game.gameOver) {\r\n                                    clearInterval(scoreTimer);\r\n                                    return;\r\n                                }\r\n                                game.score++;\r\n                            }, game.obsInterval);\r\n                        }\r\n\r\n                        game.CanMove();\r\n                        if (game.gameOver) {\r\n                            game.ShowOver();\r\n                            clearInterval(updateTimer);\r\n                            return;\r\n                        }\r\n                        game.ClearScreen();\r\n                        game.DrawObs();\r\n                        game.CheckTouch();\r\n                        game.ShowScore();\r\n                    }, speed);\r\n                    var obsTimer = setInterval(function () {\r\n                        if (game.gameOver) {\r\n                            clearInterval(obsTimer);\r\n                            return;\r\n                        }\r\n                        game.CreateObs();\r\n                    }, game.obsInterval);\r\n                }\r\n            }\r\n\r\n            f();\r\n\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]}]}