{"remainingRequest":"C:\\Users\\15985\\IdeaProjects\\Vue\\src\\vuepro\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\15985\\IdeaProjects\\Vue\\src\\vuepro\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\15985\\IdeaProjects\\Vue\\src\\vuepro\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\15985\\IdeaProjects\\Vue\\src\\vuepro\\src\\components\\homecomponents\\MyFriend.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\15985\\IdeaProjects\\Vue\\src\\vuepro\\src\\components\\homecomponents\\MyFriend.vue","mtime":1561699419481},{"path":"C:\\Users\\15985\\IdeaProjects\\Vue\\src\\vuepro\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\15985\\IdeaProjects\\Vue\\src\\vuepro\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\15985\\IdeaProjects\\Vue\\src\\vuepro\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\15985\\IdeaProjects\\Vue\\src\\vuepro\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _typeof from \"C:\\\\Users\\\\15985\\\\IdeaProjects\\\\Vue\\\\src\\\\vuepro\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/typeof\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"MyFriend\",\n  data: function data() {\n    return {\n      friends: [],\n      friendUserName: '',\n      allUsers: [],\n      hasBeanFriend: false,\n      dontExist: false,\n      addSuccess: false\n    };\n  },\n  methods: {\n    addFriend: function addFriend() {\n      var _this = this;\n\n      //判断是否已经是好友\n      for (var i = 0; i < this.friends.length; i++) {\n        if (this.friends[i].userName == this.friendUserName) {\n          this.hasBeanFriend = true;\n          this.dontExist = false;\n          this.addSuccess = false;\n          return;\n        }\n      } //判断是否存在此用户\n\n\n      for (var _i = 0; _i < this.allUsers.length; _i++) {\n        if (this.allUsers[_i].userName == this.friendUserName) {\n          var _ret = function () {\n            //更新视图\n            var newFriendItem = {\n              birthday: null,\n              email: null,\n              gender: null,\n              id: null,\n              password: null,\n              telephoneNumber: null,\n              userName: null\n            };\n\n            _this.axios.get('http://localhost:8080/user/' + _this.friendUserName).then(function (response) {\n              newFriendItem.birthday = response.data.birthday;\n              newFriendItem.email = response.data.email;\n              newFriendItem.gender = response.data.gender;\n              newFriendItem.id = response.data.id;\n              newFriendItem.password = response.data.password;\n              newFriendItem.telephoneNumber = response.data.telephoneNumber;\n              newFriendItem.userName = response.data.userName;\n            });\n\n            _this.friends.push(newFriendItem); //更新数据库\n\n\n            var friend = {\n              \"reference\": _this.currentUser,\n              \"referenced\": _this.friendUserName\n            };\n\n            _this.axios.post('http://localhost:8080/friend', friend); //不存在此用户\n\n\n            _this.hasBeanFriend = false;\n            _this.dontExist = false;\n            _this.addSuccess = true;\n            return {\n              v: void 0\n            };\n          }();\n\n          if (_typeof(_ret) === \"object\") return _ret.v;\n        }\n      }\n\n      this.hasBeanFriend = false;\n      this.dontExist = true;\n      this.addSuccess = false;\n    },\n    deleteFriend: function deleteFriend(index) {\n      //删除数据库中条目\n      var deleteFriendItem = {\n        \"reference\": this.currentUser,\n        \"referenced\": this.friends[index].userName\n      };\n      this.axios.delete('http://localhost:8080/friend', {\n        data: deleteFriendItem\n      }); //删除视图\n\n      this.friends.splice(index, 1);\n    }\n  },\n  computed: {\n    currentUser: function currentUser() {\n      return this.$store.state.user;\n    }\n  },\n  mounted: function mounted() {\n    var _this2 = this;\n\n    //获取好友信息\n    this.axios.get('http://localhost:8080/friend/' + encodeURI(this.currentUser)).then(function (response) {\n      _this2.friends = response.data;\n    }); //获取全部用户信息\n\n    this.axios.get('http://localhost:8080/user').then(function (response) {\n      _this2.allUsers = response.data;\n    });\n  }\n};",{"version":3,"sources":["MyFriend.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div class=\"h-100\" v-show=\"currentUser!='游客'\">\r\n\r\n        <div class=\"card bg-light h-100\">\r\n            <div class=\"card-header text-center\">\r\n                <div class=\"form-inline justify-content-center\">\r\n                    <input @keypress.enter=\"addFriend\" v-model=\"friendUserName\"\r\n                           class=\"form-control form-control-sm mr-2 my-1\"\r\n                           type=\"search\" placeholder=\"用户名\" aria-label=\"Search\">\r\n                    <button @click=\"addFriend\" class=\"btn  btn-sm btn-outline-success my-1 \" type=\"button\">添加好友</button>\r\n                </div>\r\n                <div v-show=\"hasBeanFriend\" class=\" text-danger small\">您与\"{{friendUserName}}\"已经存在好友关系 !</div>\r\n                <div v-show=\"dontExist\" class=\" text-danger small\">此用户不存在 !</div>\r\n                <div v-show=\"addSuccess\" class=\" text-success small\">添加成功 !</div>\r\n            </div>\r\n            <!--如果没有朋友提示-->\r\n            <div v-show=\"friends.length==0\" class=\"text-center\">\r\n                <div class=\"h3 font-weight-light\">您暂无好友,</div>\r\n                <div class=\"h3 font-weight-light\">结交些朋友吧！</div>\r\n            </div>\r\n\r\n                <table v-show=\"friends.length!=0\" class=\"table text-center \">\r\n                    <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">用户名</th>\r\n                        <th scope=\"col\">邮箱</th>\r\n                        <th scope=\"col\">删除好友</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    <tr v-bind:key=\"friend.userName\" v-for=\"(friend,index) in friends\">\r\n                        <td scope=\"row\">{{friend.userName}}</td>\r\n                        <td class=\"small\">{{friend.email}}</td>\r\n                        <td class=\"justify-content-center\">\r\n                            <button @click=\"deleteFriend(index)\" type=\"button\" class=\"btn btn-danger btn-sm justify-content-center text-center\" aria-label=\"Close\">\r\n                                删除\r\n                            </button>\r\n                        </td>\r\n                    </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        name: \"MyFriend\",\r\n        data() {\r\n            return {\r\n                friends: [],\r\n                friendUserName: '',\r\n                allUsers: [],\r\n                hasBeanFriend: false,\r\n                dontExist: false,\r\n                addSuccess: false,\r\n\r\n\r\n            }\r\n        },\r\n        methods: {\r\n            addFriend() {\r\n                //判断是否已经是好友\r\n                for (let i = 0; i < this.friends.length; i++) {\r\n                    if (this.friends[i].userName == this.friendUserName) {\r\n                        this.hasBeanFriend = true;\r\n                        this.dontExist = false;\r\n                        this.addSuccess = false;\r\n                        return;\r\n                    }\r\n                }\r\n                //判断是否存在此用户\r\n                for (let i = 0; i < this.allUsers.length; i++) {\r\n                    if (this.allUsers[i].userName == this.friendUserName) {\r\n                        //更新视图\r\n                        let newFriendItem = {\r\n                            birthday: null,\r\n                            email: null,\r\n                            gender: null,\r\n                            id: null,\r\n                            password: null,\r\n                            telephoneNumber: null,\r\n                            userName: null,\r\n                        };\r\n                        this.axios.get('http://localhost:8080/user/' + this.friendUserName).then(response => {\r\n                            newFriendItem.birthday = response.data.birthday;\r\n                            newFriendItem.email = response.data.email;\r\n                            newFriendItem.gender = response.data.gender;\r\n                            newFriendItem.id = response.data.id;\r\n                            newFriendItem.password = response.data.password;\r\n                            newFriendItem.telephoneNumber = response.data.telephoneNumber;\r\n                            newFriendItem.userName = response.data.userName;\r\n                        })\r\n                        this.friends.push(newFriendItem);\r\n                        //更新数据库\r\n                        let friend = {\r\n                            \"reference\": this.currentUser,\r\n                            \"referenced\": this.friendUserName\r\n                        }\r\n                        this.axios.post('http://localhost:8080/friend', friend);\r\n                        //不存在此用户\r\n                        this.hasBeanFriend = false;\r\n                        this.dontExist = false;\r\n                        this.addSuccess = true;\r\n                        return;\r\n                    }\r\n                }\r\n                this.hasBeanFriend = false;\r\n                this.dontExist = true;\r\n                this.addSuccess = false;\r\n            },\r\n            deleteFriend(index) {\r\n\r\n                //删除数据库中条目\r\n                var deleteFriendItem = {\r\n                    \"reference\": this.currentUser,\r\n                    \"referenced\": this.friends[index].userName\r\n                }\r\n                this.axios.delete('http://localhost:8080/friend', {data: deleteFriendItem})\r\n                //删除视图\r\n                this.friends.splice(index, 1);\r\n            },\r\n        }\r\n        ,\r\n        computed: {\r\n            currentUser() {\r\n                return this.$store.state.user;\r\n            },\r\n\r\n        },\r\n        mounted() {\r\n            //获取好友信息\r\n            this.axios.get('http://localhost:8080/friend/' + encodeURI(this.currentUser)).then(response => {\r\n                this.friends = response.data;\r\n            });\r\n            //获取全部用户信息\r\n            this.axios.get('http://localhost:8080/user').then(response => {\r\n                this.allUsers = response.data;\r\n            })\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"sourceRoot":"src/components/homecomponents"}]}